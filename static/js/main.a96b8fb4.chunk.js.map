{"version":3,"sources":["components/Card/Card.js","components/Board/Board.js","imgs/1.svg","imgs/2.svg","imgs/3.svg","imgs/4.svg","imgs/5.svg","imgs/6.svg","imgs/7.svg","imgs/8.svg","imgs/9.svg","imgs/10.svg","imgs/11.svg","imgs/12.svg","imgs/cardPattern.png","util/index.js","App.js","index.js"],"names":["Card","props","frontImg","backImg","flipped","onClick","img","selectedClass","selected","className","onMouseEnter","e","target","style","transform","onMouseLeave","src","alt","Board","useState","cards","setCards","checkers","setCheckers","completed","setCompleted","count","setCount","onCardClick","card","checkersFull","length","id","cardAlreadyInCheckers","newCheckers","type","validateCheckers","console","log","index","setTimeout","useEffect","newCards","map","find","c","includes","key","buildCards","images","Bulbasaur","Ivysaur","Venusaur","Charmander","Charmeleon","Charizard","Squirtle","Wartortle","Blastoise","Caterpie","Metapod","Butterfree","arr","len","i","randomIdx","Math","floor","random","copyCurrent","copyRandom","suffle","Object","keys","reduce","result","item","getCard","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a96b8fb4.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Card = (props) => {\r\n\tconst { frontImg, backImg, flipped, onClick, selected } = props\r\n\tconst img = flipped ? frontImg : backImg\r\n\tconst selectedClass = selected ? 'selected' : ''\r\n\tfunction changeSize(e) {\r\n\t\te.target.style.transform = 'scale(1,1.2)'\r\n\t}\r\n\tfunction changeBack(e) {\r\n\t\te.target.style.transform = 'scale(1,1)'\r\n\t}\r\n\treturn (\r\n\t\t<div className='card-wrapper'>\r\n\t\t\t<div\r\n\t\t\t\tclassName={`Card`}\r\n\t\t\t\tonClick={onClick}\r\n\t\t\t\tonMouseEnter={changeSize}\r\n\t\t\t\tonMouseLeave={changeBack}\r\n\t\t\t>\r\n\t\t\t\t<img src={img} alt='' className={`${selectedClass}`} />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Card\r\n","import React, { useState, useEffect } from 'react'\r\nimport Card from '../Card/Card'\r\n\r\nconst Board = (props) => {\r\n\tconst [cards, setCards] = useState(props.cards)\r\n\tconst [checkers, setCheckers] = useState([])\r\n\tconst [completed, setCompleted] = useState([])\r\n\tconst [count, setCount] = useState(0)\r\n\tconst onCardClick = (card) => () => {\r\n\t\tif (checkersFull(checkers) || cardAlreadyInCheckers(checkers, card)) return\r\n\t\tconst newCheckers = [...checkers, card]\r\n\t\tsetCheckers(newCheckers)\r\n\r\n\t\tconst cardsInCheckersMatched = validateCheckers(newCheckers)\r\n\t\tif (cardsInCheckersMatched) {\r\n\t\t\tsetCompleted([...completed, newCheckers[0].type])\r\n\r\n\t\t\tconsole.log(completed)\r\n\t\t\tfor (let index = 0; index < completed.length; index++) {\r\n\t\t\t\tcompleted[index].selected = true\r\n\t\t\t}\r\n\t\t\tsetCount(count + 1)\r\n\t\t}\r\n\t\tif (checkersFull(newCheckers)) {\r\n\t\t\tresetCheckersAfter(1000)\r\n\t\t}\r\n\t\tfunction validateCheckers(checkers) {\r\n\t\t\treturn checkers.length === 2 && checkers[0].type === checkers[1].type\r\n\t\t}\r\n\t\tfunction cardAlreadyInCheckers(checkers, card) {\r\n\t\t\treturn checkers.length === 1 && checkers[0].id === card.id\r\n\t\t}\r\n\t\tfunction checkersFull(checkers) {\r\n\t\t\treturn checkers.length === 2\r\n\t\t}\r\n\t\tfunction resetCheckersAfter(time) {\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tsetCheckers([])\r\n\t\t\t}, time)\r\n\t\t}\r\n\t}\r\n\tuseEffect(() => {\r\n\t\tconst newCards = cards.map((card) => ({\r\n\t\t\t...card,\r\n\t\t\tflipped:\r\n\t\t\t\tcheckers.find((c) => c.id === card.id) || completed.includes(card.type),\r\n\t\t}))\r\n\t\tsetCards(newCards)\r\n\t}, [checkers, completed])\r\n\r\n\treturn (\r\n\t\t<div className='game-holder'>\r\n\t\t\t<div className='score-holder'> Your Score is {count}</div>\r\n\t\t\t<div className='board-container'>\r\n\t\t\t\t{cards.map((card) => (\r\n\t\t\t\t\t<Card {...card} onClick={onCardClick(card)} key={card.id} />\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Board\r\n","export default __webpack_public_path__ + \"static/media/1.778b7c5b.svg\";","export default __webpack_public_path__ + \"static/media/2.598e605c.svg\";","export default __webpack_public_path__ + \"static/media/3.5d21c18f.svg\";","export default __webpack_public_path__ + \"static/media/4.5a71089c.svg\";","export default __webpack_public_path__ + \"static/media/5.e62fef00.svg\";","export default __webpack_public_path__ + \"static/media/6.42b66480.svg\";","export default __webpack_public_path__ + \"static/media/7.23b125de.svg\";","export default __webpack_public_path__ + \"static/media/8.e9c6579d.svg\";","export default __webpack_public_path__ + \"static/media/9.3cd72b04.svg\";","export default __webpack_public_path__ + \"static/media/10.e0a4cb29.svg\";","export default __webpack_public_path__ + \"static/media/11.a71c7fec.svg\";","export default __webpack_public_path__ + \"static/media/12.e1d7e435.svg\";","export default __webpack_public_path__ + \"static/media/cardPattern.5f2d2fd3.png\";","import React from 'react'\r\nimport Bulbasaur from '../imgs/1.svg'\r\nimport Ivysaur from '../imgs/2.svg'\r\nimport Venusaur from '../imgs/3.svg'\r\nimport Charmander from '../imgs/4.svg'\r\nimport Charmeleon from '../imgs/5.svg'\r\nimport Charizard from '../imgs/6.svg'\r\nimport Squirtle from '../imgs/7.svg'\r\nimport Wartortle from '../imgs/8.svg'\r\nimport Blastoise from '../imgs/9.svg'\r\nimport Caterpie from '../imgs/10.svg'\r\nimport Metapod from '../imgs/11.svg'\r\nimport Butterfree from '../imgs/12.svg'\r\nimport backImg from '../imgs/cardPattern.png'\r\n\r\nfunction buildCards() {\r\n\tlet id = 0\r\n\tconst images = {\r\n\t\tBulbasaur,\r\n\t\tIvysaur,\r\n\t\tVenusaur,\r\n\t\tCharmander,\r\n\t\tCharmeleon,\r\n\t\tCharizard,\r\n\t\tSquirtle,\r\n\t\tWartortle,\r\n\t\tBlastoise,\r\n\t\tCaterpie,\r\n\t\tMetapod,\r\n\t\tButterfree,\r\n\t}\r\n\tconst cards = Object.keys(images).reduce((result, item) => {\r\n\t\tconst getCard = () => ({\r\n\t\t\tid: id++,\r\n\t\t\ttype: item,\r\n\t\t\tbackImg,\r\n\t\t\tfrontImg: images[item],\r\n\t\t\tflipped: false,\r\n\t\t\tselected: false,\r\n\t\t})\r\n\t\treturn [...result, getCard(), getCard()]\r\n\t}, [])\r\n\treturn suffle(cards)\r\n}\r\n\r\nfunction suffle(arr) {\r\n\tlet len = arr.length\r\n\tfor (let i = 0; i < len; i++) {\r\n\t\tlet randomIdx = Math.floor(Math.random() * len)\r\n\t\tlet copyCurrent = { ...arr[i] }\r\n\t\tlet copyRandom = { ...arr[randomIdx] }\r\n\t\tarr[i] = copyRandom\r\n\t\tarr[randomIdx] = copyCurrent\r\n\t}\r\n\treturn arr\r\n}\r\n\r\nexport { buildCards }\r\n","import React, { useState } from 'react'\n\nimport Board from './components/Board/Board'\nimport { buildCards } from './util'\nfunction App() {\n\tconst cards = buildCards()\n\treturn (\n\t\t<div className='wrapper'>\n\t\t\t<div className='game-container'>\n\t\t\t\t<h1>Matching Game! Find two of the same pokemon!</h1>\n\t\t\t\t<Board cards={cards} />\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n)\n"],"sourceRoot":""}