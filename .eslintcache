[{"C:\\Users\\eslic\\Documents\\Javascript\\coding_test\\react-memory-game\\src\\index.js":"1","C:\\Users\\eslic\\Documents\\Javascript\\coding_test\\react-memory-game\\src\\App.js":"2","C:\\Users\\eslic\\Documents\\Javascript\\coding_test\\react-memory-game\\src\\util\\index.js":"3","C:\\Users\\eslic\\Documents\\Javascript\\coding_test\\react-memory-game\\src\\components\\Board\\Board.js":"4","C:\\Users\\eslic\\Documents\\Javascript\\coding_test\\react-memory-game\\src\\components\\Card\\Card.js":"5","C:\\Users\\eslic\\Documents\\Javascript\\coding_test\\react-memory-game\\src\\components\\ScoreContainer\\ScoreContainer.js":"6","C:\\Users\\eslic\\Documents\\Javascript\\coding_test\\react-memory-game\\src\\util\\validations.js":"7","C:\\Users\\eslic\\Documents\\Javascript\\coding_test\\react-memory-game\\src\\util\\removingIndex.js":"8"},{"size":209,"mtime":1610164332148,"results":"9","hashOfConfig":"10"},{"size":345,"mtime":1610355796387,"results":"11","hashOfConfig":"10"},{"size":1340,"mtime":1610356675273,"results":"12","hashOfConfig":"10"},{"size":2034,"mtime":1610356804122,"results":"13","hashOfConfig":"10"},{"size":655,"mtime":1610356397104,"results":"14","hashOfConfig":"10"},{"size":194,"mtime":1610353174243,"results":"15","hashOfConfig":"10"},{"size":395,"mtime":1610345286975,"results":"16","hashOfConfig":"10"},{"size":266,"mtime":1610352283373,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"7x8es9",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"C:\\Users\\eslic\\Documents\\Javascript\\coding_test\\react-memory-game\\src\\index.js",[],["37","38"],"C:\\Users\\eslic\\Documents\\Javascript\\coding_test\\react-memory-game\\src\\App.js",[],"C:\\Users\\eslic\\Documents\\Javascript\\coding_test\\react-memory-game\\src\\util\\index.js",[],"C:\\Users\\eslic\\Documents\\Javascript\\coding_test\\react-memory-game\\src\\components\\Board\\Board.js",["39","40"],"import React, { useState, useEffect } from 'react'\r\nimport Card from '../Card/Card'\r\nimport ScoreContainer from '../ScoreContainer/ScoreContainer'\r\n\r\nimport { removingIndex } from '../../util/removingIndex'\r\nimport {\r\n\tvalidateValidators,\r\n\tcardAlreadyInValidators,\r\n\tvalidatorsFull,\r\n} from '../../util/validations'\r\n\r\nconst Board = (props) => {\r\n\tconst [cards, setCards] = useState(...[props.cards])\r\n\tconst [validators, setValidators] = useState([])\r\n\tconst [completed, setCompleted] = useState([])\r\n\tconst [count, setCount] = useState(0)\r\n\r\n\tconst onCardClick = (card) => () => {\r\n\t\tif (validatorsFull(validators) || cardAlreadyInValidators(validators, card))\r\n\t\t\treturn\r\n\t\tconst newValidators = [...validators, card]\r\n\t\tsetValidators(newValidators)\r\n\r\n\t\tconst cardsInValidatorMatched = validateValidators(newValidators)\r\n\t\tif (cardsInValidatorMatched) {\r\n\t\t\tsetCompleted([...completed, newValidators[0].type])\r\n\t\t\tsetCount(count + 1)\r\n\t\t}\r\n\r\n\t\tif (validatorsFull(newValidators)) {\r\n\t\t\tresetValidatorsAfter(1000)\r\n\t\t}\r\n\t\tfunction resetValidatorsAfter(time) {\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tsetValidators([])\r\n\t\t\t}, time)\r\n\t\t}\r\n\t}\r\n\tuseEffect(() => {\r\n\t\tconst newCards = cards.map((card) => ({\r\n\t\t\t...card,\r\n\t\t\tflipped:\r\n\t\t\t\tvalidators.find((c) => c.id === card.id) ||\r\n\t\t\t\tcompleted.includes(card.type),\r\n\t\t}))\r\n\t\tsetCards(newCards)\r\n\t}, [validators])\r\n\r\n\tuseEffect(() => {\r\n\t\tsetTimeout(() => {\r\n\t\t\tsetCards(removingIndex(cards, completed))\r\n\t\t}, 500)\r\n\t}, [completed])\r\n\r\n\tconst handleRestart = () => {\r\n\t\tsetCards(...[props.cards])\r\n\t\tsetValidators([])\r\n\t\tsetCompleted([])\r\n\t\tsetCount(0)\r\n\t}\r\n\treturn (\r\n\t\t<div className='game-holder'>\r\n\t\t\t<div className='btn-holder'>\r\n\t\t\t\t<button onClick={handleRestart}>New Game/Restart</button>\r\n\t\t\t</div>\r\n\t\t\t<ScoreContainer count={count} cards={cards} />\r\n\t\t\t<div className='board-container'>\r\n\t\t\t\t{cards.length > 0\r\n\t\t\t\t\t? cards.map((card) => (\r\n\t\t\t\t\t\t\t<Card {...card} onClick={onCardClick(card)} key={card.id} />\r\n\t\t\t\t\t  ))\r\n\t\t\t\t\t: ''}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Board\r\n","C:\\Users\\eslic\\Documents\\Javascript\\coding_test\\react-memory-game\\src\\components\\Card\\Card.js",["41"],"import React from 'react'\r\nimport backImg from '../../imgs/cardPattern.png'\r\n\r\nconst Card = ({ frontImg, flipped, onClick, selected }) => {\r\n\tfunction changeSize(e) {\r\n\t\te.target.style.transform = 'scale(1,1.2)'\r\n\t}\r\n\tfunction changeBack(e) {\r\n\t\te.target.style.transform = 'scale(1,1)'\r\n\t}\r\n\tconst imgProps = {\r\n\t\tsrc: flipped ? frontImg : backImg,\r\n\t\tclassName: selected ? 'selected' : '',\r\n\t\talt: '',\r\n\t}\r\n\treturn (\r\n\t\t<div className='card-wrapper'>\r\n\t\t\t<div\r\n\t\t\t\tclassName={`Card`}\r\n\t\t\t\tonClick={onClick}\r\n\t\t\t\tonMouseEnter={changeSize}\r\n\t\t\t\tonMouseLeave={changeBack}\r\n\t\t\t>\r\n\t\t\t\t<img {...imgProps} />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Card\r\n","C:\\Users\\eslic\\Documents\\Javascript\\coding_test\\react-memory-game\\src\\components\\ScoreContainer\\ScoreContainer.js",[],"C:\\Users\\eslic\\Documents\\Javascript\\coding_test\\react-memory-game\\src\\util\\validations.js",[],"C:\\Users\\eslic\\Documents\\Javascript\\coding_test\\react-memory-game\\src\\util\\removingIndex.js",[],{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":47,"column":5,"nodeType":"48","endLine":47,"endColumn":17,"suggestions":"49"},{"ruleId":"46","severity":1,"message":"50","line":53,"column":5,"nodeType":"48","endLine":53,"endColumn":16,"suggestions":"51"},{"ruleId":"52","severity":1,"message":"53","line":24,"column":5,"nodeType":"54","endLine":24,"endColumn":26},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'cards' and 'completed'. Either include them or remove the dependency array.","ArrayExpression",["57"],"React Hook useEffect has a missing dependency: 'cards'. Either include it or remove the dependency array. You can also do a functional update 'setCards(c => ...)' if you only need 'cards' in the 'setCards' call.",["58"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"59","fix":"60"},{"desc":"61","fix":"62"},"Update the dependencies array to be: [cards, completed, validators]",{"range":"63","text":"64"},"Update the dependencies array to be: [cards, completed]",{"range":"65","text":"66"},[1339,1351],"[cards, completed, validators]",[1459,1470],"[cards, completed]"]